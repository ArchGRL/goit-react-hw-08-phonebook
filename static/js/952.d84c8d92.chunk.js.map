{"version":3,"file":"static/js/952.d84c8d92.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/ContactList/ContactList.stiled.jsx","components/DeliteContact/DeliteContact.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 600px;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  padding: 40px 0;\n  margin: 40px auto;\n  border: 1.5px solid #7d7d3f;\n  border-radius: 10px;\n`\nexport const Label = styled.label`\n  text-align: center;\n  font-weight: 500;\n  font-size: 24px;\n  margin-bottom: 20px;\n`\nexport const Input = styled.input`\n  font-weight: 500;\n  font-size: 24px;\n  width: 500px;\n  height: 40px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`\nexport const Button = styled.button`\n  width: 150px;\n  margin-top: 20px;\n  min-height: 30px;\n  font-weight: 600;\n  font-size: 16px;\n  color: #f8fafb;\n  background-color: #7d7d3f;\n  border-width: 1px;\n  border-radius: 4px;\n  border-style: inset;\n  border-color: #7d7d3f;\n  &:hover {\n    cursor: pointer;\n    background-color: #213804;\n    border-color: #213804;\n  }\n`\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/operations';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleInputNumberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    existingContact\n      ? alert(`${existingContact.name} is already in the phone book.`)\n      : dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <br />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+([\\-' ][a-zA-Zа-яА-Я]+)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <br />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInputNumberChange}\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </div>\n  );\n};\n","export const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { FilterWrapper } from './Filter.styled';\nimport { Label, Input } from '../ContactForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Search contact\n        <br />\n        <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n  padding-left: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ContactItem = styled.div`\n  width: 600px;\n  margin-bottom: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 24px;\n`;\nexport const ContactLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n`;\nexport const ButtonDelite = styled.button`\n  width: 150px;\n  min-height: 30px;\n  font-weight: 600;\n  font-size: 16px;\n  color: #f8fafb;\n  background-color: #7d7d3f;\n  border-width: 1px;\n  border-radius: 4px;\n  border-style: inset;\n  border-color: #7d7d3f;\n  &:hover {\n    cursor: pointer;\n    background-color: #213804;\n    border-color: #213804;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { resetFilter } from 'redux/filter/slice';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ButtonDelite } from 'components/ContactList/ContactList.stiled';\nimport PropTypes from 'prop-types';\n\nexport const DeliteContact = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    Notiflix.Confirm.show(\n      'Delete Contact',\n      'You really want to delete this contact?',\n      'Yes',\n      'No',\n      function okCb() {\n        dispatch(deleteContact(id));\n        dispatch(resetFilter());\n      },\n      function cancelCb() {\n        return;\n      },\n      {\n        width: '320px',\n        borderRadius: '8px',\n        messageColor: '#1e1e1e',\n        messageFontSize: '14px',\n        messageMaxLength: 110,\n\n        titleColor: '#7d7d3f',\n        buttonsFontSize: '15px',\n        buttonsMaxLength: 34,\n        okButtonColor: '#f8f8f8',\n        okButtonBackground: '#7d7d3f',\n        cancelButtonColor: '#f8f8f8',\n        cancelButtonBackground: '#a9a9a9',\n      }\n    );\n  };\n\n  return (\n    <ButtonDelite type=\"button\" onClick={handleDeleteContact}>\n      Delite\n    </ButtonDelite>\n  );\n};\n\nDeliteContact.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { DeliteContact } from 'components/DeliteContact/DeliteContact';\nimport { Contact, ContactItem, ContactLi } from './ContactList.stiled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = filter\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : contacts;\n\n  return (\n    <div>\n      <Contact>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactLi>\n              <span>{name}</span>\n              <span>{number}</span>\n            </ContactLi>\n            <DeliteContact id={id} />\n          </ContactItem>\n        ))}\n      </Contact>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport css from '../components/App/App.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.refresh}>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","Button","selectContacts","state","contacts","items","selectLoading","isLoading","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","action","onSubmit","e","preventDefault","newContact","existingContact","find","contact","toLowerCase","alert","addContact","type","value","onChange","currentTarget","pattern","title","required","selectFilter","filter","FilterWrapper","Filter","setFilter","target","Contact","ContactItem","ContactLi","ButtonDelite","DeliteContact","id","onClick","Notiflix","deleteContact","resetFilter","width","borderRadius","messageColor","messageFontSize","messageMaxLength","titleColor","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","ContactList","filteredContacts","includes","map","Contacts","useEffect","fetchContacts","className","css"],"sourceRoot":""}